// Code generated by go-swagger; DO NOT EDIT.

package channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"gitlab.n-t.io/core/library/hlf-tool/hlf-control-plane/test/integration/models"
)

// ChannelJoinReader is a Reader for the ChannelJoin structure.
type ChannelJoinReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChannelJoinReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewChannelJoinOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewChannelJoinInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewChannelJoinDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewChannelJoinOK creates a ChannelJoinOK with default headers values
func NewChannelJoinOK() *ChannelJoinOK {
	return &ChannelJoinOK{}
}

/*
ChannelJoinOK describes a response with status code 200, with default header values.

A successful response.
*/
type ChannelJoinOK struct {
	Payload *models.ProtoChannelJoinResponse
}

// IsSuccess returns true when this channel join o k response has a 2xx status code
func (o *ChannelJoinOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this channel join o k response has a 3xx status code
func (o *ChannelJoinOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this channel join o k response has a 4xx status code
func (o *ChannelJoinOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this channel join o k response has a 5xx status code
func (o *ChannelJoinOK) IsServerError() bool {
	return false
}

// IsCode returns true when this channel join o k response a status code equal to that given
func (o *ChannelJoinOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the channel join o k response
func (o *ChannelJoinOK) Code() int {
	return 200
}

func (o *ChannelJoinOK) Error() string {
	return fmt.Sprintf("[POST /v1/channel/join][%d] channelJoinOK  %+v", 200, o.Payload)
}

func (o *ChannelJoinOK) String() string {
	return fmt.Sprintf("[POST /v1/channel/join][%d] channelJoinOK  %+v", 200, o.Payload)
}

func (o *ChannelJoinOK) GetPayload() *models.ProtoChannelJoinResponse {
	return o.Payload
}

func (o *ChannelJoinOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProtoChannelJoinResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChannelJoinInternalServerError creates a ChannelJoinInternalServerError with default headers values
func NewChannelJoinInternalServerError() *ChannelJoinInternalServerError {
	return &ChannelJoinInternalServerError{}
}

/*
ChannelJoinInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ChannelJoinInternalServerError struct {
	Payload *models.ProtoErrorResponse
}

// IsSuccess returns true when this channel join internal server error response has a 2xx status code
func (o *ChannelJoinInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this channel join internal server error response has a 3xx status code
func (o *ChannelJoinInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this channel join internal server error response has a 4xx status code
func (o *ChannelJoinInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this channel join internal server error response has a 5xx status code
func (o *ChannelJoinInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this channel join internal server error response a status code equal to that given
func (o *ChannelJoinInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the channel join internal server error response
func (o *ChannelJoinInternalServerError) Code() int {
	return 500
}

func (o *ChannelJoinInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/channel/join][%d] channelJoinInternalServerError  %+v", 500, o.Payload)
}

func (o *ChannelJoinInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/channel/join][%d] channelJoinInternalServerError  %+v", 500, o.Payload)
}

func (o *ChannelJoinInternalServerError) GetPayload() *models.ProtoErrorResponse {
	return o.Payload
}

func (o *ChannelJoinInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProtoErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChannelJoinDefault creates a ChannelJoinDefault with default headers values
func NewChannelJoinDefault(code int) *ChannelJoinDefault {
	return &ChannelJoinDefault{
		_statusCode: code,
	}
}

/*
ChannelJoinDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ChannelJoinDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this channel join default response has a 2xx status code
func (o *ChannelJoinDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this channel join default response has a 3xx status code
func (o *ChannelJoinDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this channel join default response has a 4xx status code
func (o *ChannelJoinDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this channel join default response has a 5xx status code
func (o *ChannelJoinDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this channel join default response a status code equal to that given
func (o *ChannelJoinDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the channel join default response
func (o *ChannelJoinDefault) Code() int {
	return o._statusCode
}

func (o *ChannelJoinDefault) Error() string {
	return fmt.Sprintf("[POST /v1/channel/join][%d] channelJoin default  %+v", o._statusCode, o.Payload)
}

func (o *ChannelJoinDefault) String() string {
	return fmt.Sprintf("[POST /v1/channel/join][%d] channelJoin default  %+v", o._statusCode, o.Payload)
}

func (o *ChannelJoinDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ChannelJoinDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
