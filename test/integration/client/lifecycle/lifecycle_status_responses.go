// Code generated by go-swagger; DO NOT EDIT.

package lifecycle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"gitlab.n-t.io/core/library/hlf-tool/hlf-control-plane/test/integration/models"
)

// LifecycleStatusReader is a Reader for the LifecycleStatus structure.
type LifecycleStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LifecycleStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLifecycleStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewLifecycleStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewLifecycleStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewLifecycleStatusOK creates a LifecycleStatusOK with default headers values
func NewLifecycleStatusOK() *LifecycleStatusOK {
	return &LifecycleStatusOK{}
}

/*
LifecycleStatusOK describes a response with status code 200, with default header values.

A successful response.
*/
type LifecycleStatusOK struct {
	Payload *models.ProtoLifecycleStatusResponse
}

// IsSuccess returns true when this lifecycle status o k response has a 2xx status code
func (o *LifecycleStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this lifecycle status o k response has a 3xx status code
func (o *LifecycleStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this lifecycle status o k response has a 4xx status code
func (o *LifecycleStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this lifecycle status o k response has a 5xx status code
func (o *LifecycleStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this lifecycle status o k response a status code equal to that given
func (o *LifecycleStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the lifecycle status o k response
func (o *LifecycleStatusOK) Code() int {
	return 200
}

func (o *LifecycleStatusOK) Error() string {
	return fmt.Sprintf("[GET /v1/lifecycle/{channelName}][%d] lifecycleStatusOK  %+v", 200, o.Payload)
}

func (o *LifecycleStatusOK) String() string {
	return fmt.Sprintf("[GET /v1/lifecycle/{channelName}][%d] lifecycleStatusOK  %+v", 200, o.Payload)
}

func (o *LifecycleStatusOK) GetPayload() *models.ProtoLifecycleStatusResponse {
	return o.Payload
}

func (o *LifecycleStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProtoLifecycleStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLifecycleStatusInternalServerError creates a LifecycleStatusInternalServerError with default headers values
func NewLifecycleStatusInternalServerError() *LifecycleStatusInternalServerError {
	return &LifecycleStatusInternalServerError{}
}

/*
LifecycleStatusInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type LifecycleStatusInternalServerError struct {
	Payload *models.ProtoErrorResponse
}

// IsSuccess returns true when this lifecycle status internal server error response has a 2xx status code
func (o *LifecycleStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this lifecycle status internal server error response has a 3xx status code
func (o *LifecycleStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this lifecycle status internal server error response has a 4xx status code
func (o *LifecycleStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this lifecycle status internal server error response has a 5xx status code
func (o *LifecycleStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this lifecycle status internal server error response a status code equal to that given
func (o *LifecycleStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the lifecycle status internal server error response
func (o *LifecycleStatusInternalServerError) Code() int {
	return 500
}

func (o *LifecycleStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/lifecycle/{channelName}][%d] lifecycleStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *LifecycleStatusInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/lifecycle/{channelName}][%d] lifecycleStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *LifecycleStatusInternalServerError) GetPayload() *models.ProtoErrorResponse {
	return o.Payload
}

func (o *LifecycleStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProtoErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLifecycleStatusDefault creates a LifecycleStatusDefault with default headers values
func NewLifecycleStatusDefault(code int) *LifecycleStatusDefault {
	return &LifecycleStatusDefault{
		_statusCode: code,
	}
}

/*
LifecycleStatusDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type LifecycleStatusDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this lifecycle status default response has a 2xx status code
func (o *LifecycleStatusDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this lifecycle status default response has a 3xx status code
func (o *LifecycleStatusDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this lifecycle status default response has a 4xx status code
func (o *LifecycleStatusDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this lifecycle status default response has a 5xx status code
func (o *LifecycleStatusDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this lifecycle status default response a status code equal to that given
func (o *LifecycleStatusDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the lifecycle status default response
func (o *LifecycleStatusDefault) Code() int {
	return o._statusCode
}

func (o *LifecycleStatusDefault) Error() string {
	return fmt.Sprintf("[GET /v1/lifecycle/{channelName}][%d] lifecycleStatus default  %+v", o._statusCode, o.Payload)
}

func (o *LifecycleStatusDefault) String() string {
	return fmt.Sprintf("[GET /v1/lifecycle/{channelName}][%d] lifecycleStatus default  %+v", o._statusCode, o.Payload)
}

func (o *LifecycleStatusDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *LifecycleStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
