// Code generated by go-swagger; DO NOT EDIT.

package lifecycle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/atomyze-foundation/hlf-control-plane/test/integration/models"
)

// LifecycleApproveForMyOrgReader is a Reader for the LifecycleApproveForMyOrg structure.
type LifecycleApproveForMyOrgReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LifecycleApproveForMyOrgReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLifecycleApproveForMyOrgOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewLifecycleApproveForMyOrgInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewLifecycleApproveForMyOrgDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewLifecycleApproveForMyOrgOK creates a LifecycleApproveForMyOrgOK with default headers values
func NewLifecycleApproveForMyOrgOK() *LifecycleApproveForMyOrgOK {
	return &LifecycleApproveForMyOrgOK{}
}

/*
LifecycleApproveForMyOrgOK describes a response with status code 200, with default header values.

A successful response.
*/
type LifecycleApproveForMyOrgOK struct {
	Payload models.ProtoLifecycleApproveForMyOrgResponse
}

// IsSuccess returns true when this lifecycle approve for my org o k response has a 2xx status code
func (o *LifecycleApproveForMyOrgOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this lifecycle approve for my org o k response has a 3xx status code
func (o *LifecycleApproveForMyOrgOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this lifecycle approve for my org o k response has a 4xx status code
func (o *LifecycleApproveForMyOrgOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this lifecycle approve for my org o k response has a 5xx status code
func (o *LifecycleApproveForMyOrgOK) IsServerError() bool {
	return false
}

// IsCode returns true when this lifecycle approve for my org o k response a status code equal to that given
func (o *LifecycleApproveForMyOrgOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the lifecycle approve for my org o k response
func (o *LifecycleApproveForMyOrgOK) Code() int {
	return 200
}

func (o *LifecycleApproveForMyOrgOK) Error() string {
	return fmt.Sprintf("[POST /v1/lifecycle/approve-for-my-org][%d] lifecycleApproveForMyOrgOK  %+v", 200, o.Payload)
}

func (o *LifecycleApproveForMyOrgOK) String() string {
	return fmt.Sprintf("[POST /v1/lifecycle/approve-for-my-org][%d] lifecycleApproveForMyOrgOK  %+v", 200, o.Payload)
}

func (o *LifecycleApproveForMyOrgOK) GetPayload() models.ProtoLifecycleApproveForMyOrgResponse {
	return o.Payload
}

func (o *LifecycleApproveForMyOrgOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLifecycleApproveForMyOrgInternalServerError creates a LifecycleApproveForMyOrgInternalServerError with default headers values
func NewLifecycleApproveForMyOrgInternalServerError() *LifecycleApproveForMyOrgInternalServerError {
	return &LifecycleApproveForMyOrgInternalServerError{}
}

/*
LifecycleApproveForMyOrgInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type LifecycleApproveForMyOrgInternalServerError struct {
	Payload *models.ProtoErrorResponse
}

// IsSuccess returns true when this lifecycle approve for my org internal server error response has a 2xx status code
func (o *LifecycleApproveForMyOrgInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this lifecycle approve for my org internal server error response has a 3xx status code
func (o *LifecycleApproveForMyOrgInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this lifecycle approve for my org internal server error response has a 4xx status code
func (o *LifecycleApproveForMyOrgInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this lifecycle approve for my org internal server error response has a 5xx status code
func (o *LifecycleApproveForMyOrgInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this lifecycle approve for my org internal server error response a status code equal to that given
func (o *LifecycleApproveForMyOrgInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the lifecycle approve for my org internal server error response
func (o *LifecycleApproveForMyOrgInternalServerError) Code() int {
	return 500
}

func (o *LifecycleApproveForMyOrgInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/lifecycle/approve-for-my-org][%d] lifecycleApproveForMyOrgInternalServerError  %+v", 500, o.Payload)
}

func (o *LifecycleApproveForMyOrgInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/lifecycle/approve-for-my-org][%d] lifecycleApproveForMyOrgInternalServerError  %+v", 500, o.Payload)
}

func (o *LifecycleApproveForMyOrgInternalServerError) GetPayload() *models.ProtoErrorResponse {
	return o.Payload
}

func (o *LifecycleApproveForMyOrgInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProtoErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLifecycleApproveForMyOrgDefault creates a LifecycleApproveForMyOrgDefault with default headers values
func NewLifecycleApproveForMyOrgDefault(code int) *LifecycleApproveForMyOrgDefault {
	return &LifecycleApproveForMyOrgDefault{
		_statusCode: code,
	}
}

/*
LifecycleApproveForMyOrgDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type LifecycleApproveForMyOrgDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this lifecycle approve for my org default response has a 2xx status code
func (o *LifecycleApproveForMyOrgDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this lifecycle approve for my org default response has a 3xx status code
func (o *LifecycleApproveForMyOrgDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this lifecycle approve for my org default response has a 4xx status code
func (o *LifecycleApproveForMyOrgDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this lifecycle approve for my org default response has a 5xx status code
func (o *LifecycleApproveForMyOrgDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this lifecycle approve for my org default response a status code equal to that given
func (o *LifecycleApproveForMyOrgDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the lifecycle approve for my org default response
func (o *LifecycleApproveForMyOrgDefault) Code() int {
	return o._statusCode
}

func (o *LifecycleApproveForMyOrgDefault) Error() string {
	return fmt.Sprintf("[POST /v1/lifecycle/approve-for-my-org][%d] lifecycleApproveForMyOrg default  %+v", o._statusCode, o.Payload)
}

func (o *LifecycleApproveForMyOrgDefault) String() string {
	return fmt.Sprintf("[POST /v1/lifecycle/approve-for-my-org][%d] lifecycleApproveForMyOrg default  %+v", o._statusCode, o.Payload)
}

func (o *LifecycleApproveForMyOrgDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *LifecycleApproveForMyOrgDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
