// Code generated by go-swagger; DO NOT EDIT.

package configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/atomyze-foundation/hlf-control-plane/test/integration/models"
)

// AnchorPeerListReader is a Reader for the AnchorPeerList structure.
type AnchorPeerListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AnchorPeerListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAnchorPeerListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewAnchorPeerListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAnchorPeerListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAnchorPeerListOK creates a AnchorPeerListOK with default headers values
func NewAnchorPeerListOK() *AnchorPeerListOK {
	return &AnchorPeerListOK{}
}

/*
AnchorPeerListOK describes a response with status code 200, with default header values.

A successful response.
*/
type AnchorPeerListOK struct {
	Payload *models.ProtoConfigAnchorListResponse
}

// IsSuccess returns true when this anchor peer list o k response has a 2xx status code
func (o *AnchorPeerListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this anchor peer list o k response has a 3xx status code
func (o *AnchorPeerListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this anchor peer list o k response has a 4xx status code
func (o *AnchorPeerListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this anchor peer list o k response has a 5xx status code
func (o *AnchorPeerListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this anchor peer list o k response a status code equal to that given
func (o *AnchorPeerListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the anchor peer list o k response
func (o *AnchorPeerListOK) Code() int {
	return 200
}

func (o *AnchorPeerListOK) Error() string {
	return fmt.Sprintf("[GET /v1/config/{channelName}/anchor][%d] anchorPeerListOK  %+v", 200, o.Payload)
}

func (o *AnchorPeerListOK) String() string {
	return fmt.Sprintf("[GET /v1/config/{channelName}/anchor][%d] anchorPeerListOK  %+v", 200, o.Payload)
}

func (o *AnchorPeerListOK) GetPayload() *models.ProtoConfigAnchorListResponse {
	return o.Payload
}

func (o *AnchorPeerListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProtoConfigAnchorListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAnchorPeerListInternalServerError creates a AnchorPeerListInternalServerError with default headers values
func NewAnchorPeerListInternalServerError() *AnchorPeerListInternalServerError {
	return &AnchorPeerListInternalServerError{}
}

/*
AnchorPeerListInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type AnchorPeerListInternalServerError struct {
	Payload *models.ProtoErrorResponse
}

// IsSuccess returns true when this anchor peer list internal server error response has a 2xx status code
func (o *AnchorPeerListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this anchor peer list internal server error response has a 3xx status code
func (o *AnchorPeerListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this anchor peer list internal server error response has a 4xx status code
func (o *AnchorPeerListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this anchor peer list internal server error response has a 5xx status code
func (o *AnchorPeerListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this anchor peer list internal server error response a status code equal to that given
func (o *AnchorPeerListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the anchor peer list internal server error response
func (o *AnchorPeerListInternalServerError) Code() int {
	return 500
}

func (o *AnchorPeerListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/config/{channelName}/anchor][%d] anchorPeerListInternalServerError  %+v", 500, o.Payload)
}

func (o *AnchorPeerListInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/config/{channelName}/anchor][%d] anchorPeerListInternalServerError  %+v", 500, o.Payload)
}

func (o *AnchorPeerListInternalServerError) GetPayload() *models.ProtoErrorResponse {
	return o.Payload
}

func (o *AnchorPeerListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProtoErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAnchorPeerListDefault creates a AnchorPeerListDefault with default headers values
func NewAnchorPeerListDefault(code int) *AnchorPeerListDefault {
	return &AnchorPeerListDefault{
		_statusCode: code,
	}
}

/*
AnchorPeerListDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type AnchorPeerListDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this anchor peer list default response has a 2xx status code
func (o *AnchorPeerListDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this anchor peer list default response has a 3xx status code
func (o *AnchorPeerListDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this anchor peer list default response has a 4xx status code
func (o *AnchorPeerListDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this anchor peer list default response has a 5xx status code
func (o *AnchorPeerListDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this anchor peer list default response a status code equal to that given
func (o *AnchorPeerListDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the anchor peer list default response
func (o *AnchorPeerListDefault) Code() int {
	return o._statusCode
}

func (o *AnchorPeerListDefault) Error() string {
	return fmt.Sprintf("[GET /v1/config/{channelName}/anchor][%d] anchorPeerList default  %+v", o._statusCode, o.Payload)
}

func (o *AnchorPeerListDefault) String() string {
	return fmt.Sprintf("[GET /v1/config/{channelName}/anchor][%d] anchorPeerList default  %+v", o._statusCode, o.Payload)
}

func (o *AnchorPeerListDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *AnchorPeerListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
