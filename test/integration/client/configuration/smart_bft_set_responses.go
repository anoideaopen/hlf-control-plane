// Code generated by go-swagger; DO NOT EDIT.

package configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/atomyze-foundation/hlf-control-plane/test/integration/models"
)

// SmartBftSetReader is a Reader for the SmartBftSet structure.
type SmartBftSetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SmartBftSetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSmartBftSetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewSmartBftSetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewSmartBftSetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSmartBftSetOK creates a SmartBftSetOK with default headers values
func NewSmartBftSetOK() *SmartBftSetOK {
	return &SmartBftSetOK{}
}

/*
SmartBftSetOK describes a response with status code 200, with default header values.

A successful response.
*/
type SmartBftSetOK struct {
	Payload models.ProtoConfigSmartBFTSetResponse
}

// IsSuccess returns true when this smart bft set o k response has a 2xx status code
func (o *SmartBftSetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this smart bft set o k response has a 3xx status code
func (o *SmartBftSetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smart bft set o k response has a 4xx status code
func (o *SmartBftSetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this smart bft set o k response has a 5xx status code
func (o *SmartBftSetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this smart bft set o k response a status code equal to that given
func (o *SmartBftSetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the smart bft set o k response
func (o *SmartBftSetOK) Code() int {
	return 200
}

func (o *SmartBftSetOK) Error() string {
	return fmt.Sprintf("[POST /v1/config/{channelName}/smartbft][%d] smartBftSetOK  %+v", 200, o.Payload)
}

func (o *SmartBftSetOK) String() string {
	return fmt.Sprintf("[POST /v1/config/{channelName}/smartbft][%d] smartBftSetOK  %+v", 200, o.Payload)
}

func (o *SmartBftSetOK) GetPayload() models.ProtoConfigSmartBFTSetResponse {
	return o.Payload
}

func (o *SmartBftSetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSmartBftSetInternalServerError creates a SmartBftSetInternalServerError with default headers values
func NewSmartBftSetInternalServerError() *SmartBftSetInternalServerError {
	return &SmartBftSetInternalServerError{}
}

/*
SmartBftSetInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type SmartBftSetInternalServerError struct {
	Payload *models.ProtoErrorResponse
}

// IsSuccess returns true when this smart bft set internal server error response has a 2xx status code
func (o *SmartBftSetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this smart bft set internal server error response has a 3xx status code
func (o *SmartBftSetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this smart bft set internal server error response has a 4xx status code
func (o *SmartBftSetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this smart bft set internal server error response has a 5xx status code
func (o *SmartBftSetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this smart bft set internal server error response a status code equal to that given
func (o *SmartBftSetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the smart bft set internal server error response
func (o *SmartBftSetInternalServerError) Code() int {
	return 500
}

func (o *SmartBftSetInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/config/{channelName}/smartbft][%d] smartBftSetInternalServerError  %+v", 500, o.Payload)
}

func (o *SmartBftSetInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/config/{channelName}/smartbft][%d] smartBftSetInternalServerError  %+v", 500, o.Payload)
}

func (o *SmartBftSetInternalServerError) GetPayload() *models.ProtoErrorResponse {
	return o.Payload
}

func (o *SmartBftSetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProtoErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSmartBftSetDefault creates a SmartBftSetDefault with default headers values
func NewSmartBftSetDefault(code int) *SmartBftSetDefault {
	return &SmartBftSetDefault{
		_statusCode: code,
	}
}

/*
SmartBftSetDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type SmartBftSetDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this smart bft set default response has a 2xx status code
func (o *SmartBftSetDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this smart bft set default response has a 3xx status code
func (o *SmartBftSetDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this smart bft set default response has a 4xx status code
func (o *SmartBftSetDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this smart bft set default response has a 5xx status code
func (o *SmartBftSetDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this smart bft set default response a status code equal to that given
func (o *SmartBftSetDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the smart bft set default response
func (o *SmartBftSetDefault) Code() int {
	return o._statusCode
}

func (o *SmartBftSetDefault) Error() string {
	return fmt.Sprintf("[POST /v1/config/{channelName}/smartbft][%d] smartBftSet default  %+v", o._statusCode, o.Payload)
}

func (o *SmartBftSetDefault) String() string {
	return fmt.Sprintf("[POST /v1/config/{channelName}/smartbft][%d] smartBftSet default  %+v", o._statusCode, o.Payload)
}

func (o *SmartBftSetDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *SmartBftSetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
SmartBftSetBody smart bft set body
swagger:model SmartBftSetBody
*/
type SmartBftSetBody struct {

	// options
	Options *models.SmartbftOptions `json:"options,omitempty"`
}

// Validate validates this smart bft set body
func (o *SmartBftSetBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateOptions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SmartBftSetBody) validateOptions(formats strfmt.Registry) error {
	if swag.IsZero(o.Options) { // not required
		return nil
	}

	if o.Options != nil {
		if err := o.Options.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "options")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "options")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this smart bft set body based on the context it is used
func (o *SmartBftSetBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateOptions(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SmartBftSetBody) contextValidateOptions(ctx context.Context, formats strfmt.Registry) error {

	if o.Options != nil {

		if swag.IsZero(o.Options) { // not required
			return nil
		}

		if err := o.Options.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "options")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "options")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SmartBftSetBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SmartBftSetBody) UnmarshalBinary(b []byte) error {
	var res SmartBftSetBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
